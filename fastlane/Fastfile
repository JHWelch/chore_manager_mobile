def gitub_authorization_token
  username = ENV['USERNAME']
  personal_github_access_token = ENV['FASTLANE_GITHUB_PAT']
  return nil if username.nil? || personal_github_access_token.nil?
  authorization_token_str = "#{username}:#{personal_github_access_token}"
  Base64.strict_encode64(authorization_token_str)
end

def apply_version
  flutter_version_manager(
    arguments: '-apply',
    yml: './version.yml',
    pubspec: './pubspec.yaml'
  )
end

platform :ios do
  desc 'Deploy a new build to TestFlight'
  lane :deploy do
    apply_version
    setup_ci if ENV['CI']
    app_store_connect_api_key
    match(
      readonly: true,
      type: 'appstore',
      git_basic_authorization: gitub_authorization_token,
    )
    sh 'flutter build ipa --release --no-codesign'
    build_app(
      archive_path: './build/ios/archive/Runner.xcarchive',
      project: './ios/Runner.xcodeproj',
      skip_build_archive: true,
      export_team_id: CredentialsManager::AppfileConfig.try_fetch_value(:team_id),
    )
    upload_to_testflight
  end
end

platform :android do
  desc 'Deploy a new build to the Google Play Internal Track'
  lane :deploy do
    apply_version
    sh 'flutter build appbundle --release'
    upload_to_play_store(
      aab: './build/app/outputs/bundle/release/app-release.aab',
      release_status: 'draft',
      track: 'internal',
    )
  end
end
