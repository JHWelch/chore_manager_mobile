name: Deploy
on:
  pull_request:
    types:
    - closed
    branches:
    - main

jobs:
  deploy-ios:
    name: App Store (iOS)
    if: github.event.pull_request.merged == true
    runs-on: macos-13
    environment: 'Production - iOS'
    env:
      API_URL: ${{ secrets.API_URL }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
      APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
      APP_STORE_CONNECT_API_KEY_IS_KEY_CONTENT_BASE64: ${{ vars.APP_STORE_CONNECT_API_KEY_IS_KEY_CONTENT_BASE64 }}
      FASTLANE_GITHUB_PAT: ${{ secrets.FASTLANE_GITHUB_PAT }}
      USERNAME: ${{ secrets.USERNAME }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1.2'
        bundler-cache: true

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.0'
        channel: stable

    - name: Get Packages
      run: flutter pub get

    - name: Deploy to App Store
      run: bundle exec fastlane ios deploy

  deploy-android:
    name: Google Play (Android)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: 'Production - Android'
    env:
      API_URL: ${{ secrets.API_URL }}
      SUPPLY_JSON_KEY_DATA: ${{ secrets.SUPPLY_JSON_KEY_DATA }}
      UPLOAD_KEY_PASSWORD: ${{ secrets.UPLOAD_KEY_PASSWORD }}
      UPLOAD_KEYSTORE: ${{ secrets.UPLOAD_KEYSTORE }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.1.2'
        bundler-cache: true

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.13.0'
        channel: stable

    - name: Get Packages
      run: flutter pub get

    - name: Place key.properties
      run: |
        echo "storePassword=$UPLOAD_KEY_PASSWORD" >> android/key.properties
        echo "keyPassword=$UPLOAD_KEY_PASSWORD" >> android/key.properties
        echo "keyAlias=upload" >> android/key.properties
        echo "storeFile=upload.jks" >> android/key.properties

    - name: Place upload.jks
      run: echo $UPLOAD_KEYSTORE | base64 --decode > android/app/upload.jks

    - name: Deploy to Google Play
      run: bundle exec fastlane android deploy
